core :: mod "core";
meta :: core.meta;

main :: () {
    slice := [] i32 { 4, 8, 15, 16, 23, 42 };
  
    print_int_slice(slice);
    print_int_slice([] i32 { 1, 2, 3 });
    print_int_slice([] i32 { 4, 5, 6, 7, 8 });

    // arrays may implicitly become slices but slices must explicitly become arrays

    arr := slice as [6] i32; // slice => array

    print_int_array(arr);
    print_int_slice(arr); // array => slice
}

print_int_slice :: (slice: [] i32) {
    idx := 0;
    core.print("{ ");
    while idx < slice.len {
        printf("%i", slice[idx]);
        
        if idx < slice.len - 1 {
            core.print(", ");
        }

        idx = idx + 1;
    }
    core.print(" }\n");
};

print_int_array :: (arr: [6] i32) {
    idx := 0;
    core.print("{ ");
    while idx < arr.len {
        printf("%i", arr[idx]);
        
        if idx < arr.len - 1 {
            core.print(", ");
        }

        idx = idx + 1;
    }
    core.print(" }\n");
};

printf :: (text: str, n: i32) extern;


core :: mod "core";
libc :: mod "core".libc;
io :: import "io.capy";

// comptime blocks are JIT compiled and the bytes they return are baked into the data segment of the program
my_global :: comptime {
    libc.puts("Calculating global value...");

    x := 5;

    x * 2
};

main :: () {
    core.println("Hello at runtime!");

    io.label("that global was equal to ", my_global);

    powers_of_two := comptime {
        core.println("Doing heavy calculation...");

        math :: mod "core".math;

        array: [6]i32;

        idx := 0;
        while idx < array.len {
            array[idx] = math.pow(2, idx as i32);
            idx = idx + 1;
        }

        core.println("Finished heavy calculation :)");

        array
    };

    io.label("2^0 = ", powers_of_two[0]);
    io.label("2^1 = ", powers_of_two[1]);
    io.label("2^2 = ", powers_of_two[2]);
    io.label("2^3 = ", powers_of_two[3]);
    io.label("2^4 = ", powers_of_two[4]);
    io.label("2^5 = ", powers_of_two[5]);
}


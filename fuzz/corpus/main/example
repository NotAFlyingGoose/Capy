foo :: 10;
bar := 20;
a :: comptime { foo + {bar * bar - {100 / 33}} };

calc :: comptime {
    sum = (x: i32, y: i32) -> i32 { x + y };
    mul = (x: i32, y: i32) -> i32 { x * y };

    do_math = (op: (x: i32, y: i32) -> i32, x, y) { op(x, y) };

    do_math(sum, 2, 3);
    do_math(mul, 2, 3);

    {
        do_math(mul, 6, 7)
    }
};

Foo :: struct {
    a: i32,
    b: string,
    c: ^Bar,
};

Bar :: struct {
    x: bool,
    y: Vector3,
};

Foo2 :: distinct Foo;

main :: () {
    array := [] i32 { 1, 2, 3 };

    str := "Wowza!";

    array[0] = 2000;

    if array[1] == a * {a - 10} {
        printf("bleh", 1, 2, true);
    } else {
        panic("WHAT'S WRONG WITH YOU!");
    }

    num := 5;
    ptr := ^num;

    ptr^ = 42;

    if !{array[0] as bool} {
        // wow look at this comment!

        ptr^ = {^array}^[2] * ptr^ * a;

        // so fancy!
    }

    idx := 5;
    while idx < 3 * math.factorial(200) {
        libc.puts("Hi!");
    }

    loop {
        18446744073709551615;

        1.7976931348623157E+308;
    }

    ptr := ^str;
    str^ = "Hello, Sailor!";

    Person :: struct {
        name: string,
        age: i32,
    };

    gandalf := Person {
        name: "Gandalf",
        age: 2000,
    };

    gandalf.age = gandalf.age + 1;
}

printf :: (fmt: string, n1: i32, n2: i64, cond: bool) -> void extern;

Vector3 :: distinct [3] i32;